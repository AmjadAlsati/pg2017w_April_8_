#!/usr/bin/python2
PACKAGE = "cooperative_driving_logic"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# General behavior parameters
gen.add("max_velocity",         double_t, 0, "The maximum velocity",            0.3,  0.0, 2.0)
gen.add("max_turn_rate",        double_t, 0, "The maximum turn rate",           4.0, 0.0, 10.0)
# Line following parameters
gen.add("line_row_location" ,   int_t   , 0, "Location where to look for the line that should be followed.", 230, 0 , 480)
gen.add("LF_K_p" ,              double_t, 0, "Proportional component for the line-folling PID-controller", 0.32, 0.0, 1.0)
gen.add("LF_K_i" ,              double_t, 0, "Integral component for the line-folling PID-controller", 0.002, 0.0, 1.0)
gen.add("LF_K_d" ,              double_t, 0, "Derivative component for the line-folling PID-controller", 0.09, 0.0, 1.0)
gen.add("LF_windup_limit",      double_t, 0, "Limits the absolute value of the integral term of the line-following PID-controller.", 0.8, 0.0, 5.0)
# Blob following parameters
gen.add("target_distance",      double_t, 0, "The target distance of the robot",            15.0, 0.0, 50.0)
gen.add("BD_K_p" ,              double_t, 0, "Proportional component for the blob-distance PID-controller", 0.03, 0.0, 1.0)
gen.add("BD_K_i" ,              double_t, 0, "Integral component for the blob-distance PID-controller", 0.00016, 0.0, 1.0)
gen.add("BD_K_d" ,              double_t, 0, "Derivative component for the blob-distance PID-controller", 0.0013, 0.0, 1.0)
gen.add("BD_windup_limit",      double_t, 0, "Limits the absolute value of the integral term of the blob-distance PID-controller.", 1.5, 0.0, 5.0)
gen.add("BD_deadzone",          double_t, 0, "The deadzone used for keeping the blob distance.", 0.03, 0.0, 1.0)

exit(gen.generate(PACKAGE, "reflekte", "ReflekteServer"))


