#!/usr/bin/python2
PACKAGE = "cooperative_driving_vision"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Line detection parameters - vertical
gen.add("line_interval_lower_v", double_t, 0, "Lower end of normalized rows for vertical line detection", 0.0, 0.0, 1.0)
gen.add("line_interval_upper_v", double_t, 0, "Upper end of normalized rows for vertical line detection", 1.0, 0.0, 1.0)
gen.add("line_count_v", int_t, 0, "Number of vertical lines to extract", 20, 1, 50)
gen.add("row_influence_area_v", int_t, 0, "Number of rows to include for vertical line detection", 5, 1, 25)
gen.add("lower_canny_threshold_v", int_t, 0, "The lower threshold used for the vertical canny filter (Max. Threshold is 3 times the lower threshold)", 40, 1, 100)

# Line detection parameters - horizontal
gen.add("line_interval_lower_h", double_t, 0, "Lower end of normalized rows for horizontal line detection", 0.0, 0.0, 1.0)
gen.add("line_interval_upper_h", double_t, 0, "Upper end of normalized rows for horizontal line detection", 1.0, 0.0, 1.0)
gen.add("line_count_h", int_t, 0, "Number of horizontal lines to extract", 20, 1, 50)
gen.add("row_influence_area_h", int_t, 0, "Number of rows to include for horizontal line detection", 5, 1, 25)
gen.add("lower_canny_threshold_h", int_t, 0, "The lower threshold used for the horizontal canny filter (Max. Threshold is 3 times the lower threshold)", 64, 1, 100)

# Box Dimensions
gen.add("box_width", double_t, 0, "Width of the box in percentage of image width", 0.68, 0.0, 1.0)

gen.add("box_height", double_t, 0, "Height of the box in percentage of image height", 0.62, 0.0, 1.0)


# Blob detection parameters
gen.add("min_line_length", int_t, 0, "The minimum line size for detecting blobs.", 4, 0, 100)
gen.add("min_region_size", int_t, 0, "The minimum size detected regions are processed.", 200, 0, 800)

exit(gen.generate(PACKAGE, "feature_extractor", "FeatureExtractorServer"))
